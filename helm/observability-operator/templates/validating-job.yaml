{{- if .Values.validationJob.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "resource.default.name" . }}-resources-validation
  namespace: {{ .Release.Namespace }}
  labels:
     {{- include "labels.common" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "labels.common" . | nindent 12 }}
    spec:
      serviceAccountName: {{ include "resource.default.name" . }}
      restartPolicy: Never
      containers:
      - name: {{ include "resource.default.name" . }}-resources-validation
        image: "{{ .Values.validationJob.image.registry }}/{{ .Values.validationJob.image.name }}:{{ .Values.validationJob.image.tag }}"
        imagePullPolicy: {{ .Values.validationJob.image.pullPolicy }}
        command: ["/bin/sh", "-c"]
        args: ["/scipts/validating-script.sh"]
        securityContext:
          {{- with .Values.validationJob.containerSecurityContext }}
            {{- . | toYaml | nindent 10 }}
          {{- end }}
        volumeMounts:
        - mountPath: /scripts
          name: validating-script
      volumes:
      - name: validating-script
        defaultMode: 0555
        configMap:
          name: {{ include "resource.default.name" . }}-resources-validation-script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "resource.default.name" . }}-resources-validation-script
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
data:
  validating-script.sh: |-
    isPodReady="$(kubectl get pods -n {{ include "resource.default.namespace" . }} -l app.kubernetes.io/name=observability-operator --field-selector=status.phase=Running -o jsonpath='{.items[].status.containerStatuses[0].ready}')"
    [[ "$isPodReady" == "true" ]] || exit 1
---
{{- if .Capabilities.APIVersions.Has "kyverno.io/v2alpha1/PolicyException" -}}
apiVersion: kyverno.io/v2alpha1
kind: PolicyException
metadata:
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
  labels:
    {{- include "labels.common" . | nindent 4 }}
  name: {{ include "resource.default.name" . }}-resources-validation-exceptions
  namespace: giantswarm
spec:
  exceptions:
  - policyName: require-run-as-non-root-user
    ruleNames:
    - run-as-non-root-user
    - autogen-run-as-non-root-user
  - policyName: require-run-as-nonroot
    ruleNames:
    - run-as-non-root
    - autogen-run-as-non-root
  match:
    any:
    - resources:
        kinds:
        - Pod
        - Job
        namespaces:
        - {{ .Release.Namespace }}
        names:
        - observability-operator-resources-validation*
{{- end -}}
{{- end }}
